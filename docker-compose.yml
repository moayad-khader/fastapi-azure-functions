version: '3.8'

services:
  auth-service:
    build:
      context: ./services
      dockerfile: auth-service/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./services/auth-service:/app
      - ./services/shared:/app/shared
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  organization-service:
    build:
      context: ./services
      dockerfile: organization-service/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./services/organization-service:/app
      - ./services/shared:/app/shared
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ai-agent-service:
    build:
      context: ./services
      dockerfile: ai-agent-service/Dockerfile
    ports:
      - "8003:8000"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./services/ai-agent-service:/app
      - ./services/shared:/app/shared
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy/API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - organization-service
      - ai-agent-service
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  auth_data:
  org_data:
  ai_data:
